@inject SignInManager<ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-area="Identity" asp-page="/Account/Manage/ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)"  asp-area="Identity" asp-page="/Account/Manage/ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-area="Identity" asp-page="/Account/Manage/PersonalData">Personal data</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.MyPromotionNavClass(ViewContext)" asp-action="Details" asp-controller="PromotionCustomers" asp-route-id="">My Promotions</a></li>
    <li class="nav-item"><a class="nav-link " asp-action="Details" asp-controller="CustomerProducts">My Products</a></li>
    <li class="nav-item"><a class="nav-link " asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl='@Url.Action("Index", "Home")'>Logout</a></li>

</ul>
